{"version":3,"file":"build-yLRsyw6N.mjs","sources":["../../_internal/node/webpack/build.ts"],"sourcesContent":["import webpack from 'webpack';\n\nimport { mergeConfigWithUserConfig, resolveProductionConfig } from './config';\nimport { isError } from '../core/errors';\n\nimport type { BuildContext } from '../createBuildContext';\n\nconst build = async (ctx: BuildContext) =>\n  new Promise(async (resolve, reject) => {\n    const config = await resolveProductionConfig(ctx);\n    const finalConfig = await mergeConfigWithUserConfig(config, ctx);\n\n    ctx.logger.debug('Webpack config', finalConfig);\n\n    webpack(finalConfig, (err, stats) => {\n      if (stats) {\n        if (stats.hasErrors()) {\n          ctx.logger.error(\n            stats.toString({\n              chunks: false,\n              colors: true,\n            })\n          );\n\n          reject(false);\n        } else if (ctx.options.stats) {\n          ctx.logger.info(\n            stats.toString({\n              chunks: false,\n              colors: true,\n            })\n          );\n        }\n\n        resolve(true);\n      }\n\n      if (err && isError(err)) {\n        ctx.logger.error(err.message);\n        reject(false);\n      }\n    });\n  });\n\nexport { build };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,MAAM,QAAQ,OAAO,QACnB,IAAI,QAAQ,OAAO,SAAS,WAAW;AAC/B,QAAA,SAAS,MAAM,wBAAwB,GAAG;AAChD,QAAM,cAAc,MAAM,0BAA0B,QAAQ,GAAG;AAE3D,MAAA,OAAO,MAAM,kBAAkB,WAAW;AAEtC,UAAA,aAAa,CAAC,KAAK,UAAU;AACnC,QAAI,OAAO;AACL,UAAA,MAAM,aAAa;AACrB,YAAI,OAAO;AAAA,UACT,MAAM,SAAS;AAAA,YACb,QAAQ;AAAA,YACR,QAAQ;AAAA,UAAA,CACT;AAAA,QAAA;AAGH,eAAO,KAAK;AAAA,MAAA,WACH,IAAI,QAAQ,OAAO;AAC5B,YAAI,OAAO;AAAA,UACT,MAAM,SAAS;AAAA,YACb,QAAQ;AAAA,YACR,QAAQ;AAAA,UAAA,CACT;AAAA,QAAA;AAAA,MAEL;AAEA,cAAQ,IAAI;AAAA,IACd;AAEI,QAAA,OAAO,QAAQ,GAAG,GAAG;AACnB,UAAA,OAAO,MAAM,IAAI,OAAO;AAC5B,aAAO,KAAK;AAAA,IACd;AAAA,EAAA,CACD;AACH,CAAC;"}