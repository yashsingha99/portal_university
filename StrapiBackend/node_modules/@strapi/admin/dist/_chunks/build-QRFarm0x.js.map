{"version":3,"file":"build-QRFarm0x.js","sources":["../../_internal/cli/commands/build.ts"],"sourcesContent":["import boxen from 'boxen';\nimport { build as nodeBuild, BuildOptions } from '../../node/build';\nimport { handleUnexpectedError } from '../../node/core/errors';\nimport chalk from 'chalk';\n\ninterface BuildCLIOptions extends BuildOptions {\n  /**\n   * @deprecated use `minify` instead\n   */\n  optimization?: boolean;\n}\n\nconst build = async (options: BuildCLIOptions) => {\n  try {\n    if (typeof process.env.STRAPI_ENFORCE_SOURCEMAPS !== 'undefined') {\n      options.logger.warn(\n        \"[@strapi/strapi]: STRAPI_ENFORCE_SOURCEMAPS is now deprecated. You can enable sourcemaps by passing '--sourcemaps' to the build command.\"\n      );\n    }\n    if (typeof options.optimization !== 'undefined' && options.optimization !== true) {\n      options.logger.warn(\n        \"[@strapi/strapi]: The optimization argument is now deprecated. Use '--minify' instead.\"\n      );\n    }\n\n    if (options.bundler !== 'webpack') {\n      options.logger.log(\n        boxen(\n          `Using ${chalk.bold(\n            chalk.underline(options.bundler)\n          )} as a bundler is considered experimental, use at your own risk. If you do experience bugs, open a new issue on Github â€“ https://github.com/strapi/strapi/issues/new?template=BUG_REPORT.md`,\n          {\n            title: 'Warning',\n            padding: 1,\n            margin: 1,\n            align: 'center',\n            borderColor: 'yellow',\n            borderStyle: 'bold',\n          }\n        )\n      );\n    }\n\n    const envSourceMaps = process.env.STRAPI_ENFORCE_SOURCEMAPS === 'true';\n\n    /**\n     * ENFORCE NODE_ENV to production when building\n     */\n    process.env.NODE_ENV = process.env.NODE_ENV ?? 'production';\n\n    if (process.env.NODE_ENV !== 'production') {\n      options.logger.warn(\n        '[@strapi/strapi]: The NODE_ENV is not set to production. This may result in unexpected behavior.'\n      );\n    }\n\n    await nodeBuild({\n      ...options,\n      minify: options.optimization ?? options.minify,\n      sourcemaps: options.sourcemaps || envSourceMaps,\n    });\n  } catch (err) {\n    handleUnexpectedError(err);\n  }\n};\n\nexport { build };\nexport type { BuildCLIOptions };\n"],"names":["boxen","chalk","nodeBuild","handleUnexpectedError"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYM,MAAA,QAAQ,OAAO,YAA6B;AAC5C,MAAA;AACF,QAAI,OAAO,QAAQ,IAAI,8BAA8B,aAAa;AAChE,cAAQ,OAAO;AAAA,QACb;AAAA,MAAA;AAAA,IAEJ;AACA,QAAI,OAAO,QAAQ,iBAAiB,eAAe,QAAQ,iBAAiB,MAAM;AAChF,cAAQ,OAAO;AAAA,QACb;AAAA,MAAA;AAAA,IAEJ;AAEI,QAAA,QAAQ,YAAY,WAAW;AACjC,cAAQ,OAAO;AAAA,QACbA,eAAA;AAAA,UACE,SAASC,eAAAA,QAAM;AAAA,YACbA,uBAAM,UAAU,QAAQ,OAAO;AAAA,UAChC,CAAA;AAAA,UACD;AAAA,YACE,OAAO;AAAA,YACP,SAAS;AAAA,YACT,QAAQ;AAAA,YACR,OAAO;AAAA,YACP,aAAa;AAAA,YACb,aAAa;AAAA,UACf;AAAA,QACF;AAAA,MAAA;AAAA,IAEJ;AAEM,UAAA,gBAAgB,QAAQ,IAAI,8BAA8B;AAKhE,YAAQ,IAAI,WAAW,QAAQ,IAAI,YAAY;AAE3C,QAAA,QAAQ,IAAI,aAAa,cAAc;AACzC,cAAQ,OAAO;AAAA,QACb;AAAA,MAAA;AAAA,IAEJ;AAEA,UAAMC,YAAU;AAAA,MACd,GAAG;AAAA,MACH,QAAQ,QAAQ,gBAAgB,QAAQ;AAAA,MACxC,YAAY,QAAQ,cAAc;AAAA,IAAA,CACnC;AAAA,WACM,KAAK;AACZC,UAAA,sBAAsB,GAAG;AAAA,EAC3B;AACF;;"}