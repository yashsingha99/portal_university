{"version":3,"file":"reviewWorkflows-OciQCZae.mjs","sources":["../../ee/admin/src/services/reviewWorkflows.ts"],"sourcesContent":["import { Contracts } from '@strapi/plugin-content-manager/_internal/shared';\n\nimport { adminApi } from '../../../../admin/src/services/api';\nimport * as ReviewWorkflows from '../../../../shared/contracts/review-workflows';\n\nconst reviewWorkflowsApi = adminApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getWorkflows: builder.query<\n      {\n        workflows: ReviewWorkflows.GetAll.Response['data'];\n        meta?: ReviewWorkflows.GetAll.Response['meta'];\n      },\n      GetWorkflowsParams | void\n    >({\n      query: (args) => {\n        const { id, ...params } = args ?? {};\n\n        return {\n          url: `/admin/review-workflows/workflows/${id ?? ''}`,\n          method: 'GET',\n          config: {\n            params,\n          },\n        };\n      },\n      transformResponse: (res: ReviewWorkflows.GetAll.Response | ReviewWorkflows.Get.Response) => {\n        let workflows: ReviewWorkflows.GetAll.Response['data'] = [];\n\n        if (Array.isArray(res.data)) {\n          workflows = res.data;\n        } else {\n          workflows = [res.data];\n        }\n\n        return {\n          workflows,\n          meta: 'meta' in res ? res.meta : undefined,\n        };\n      },\n      providesTags: (res, _err, arg) => {\n        if (typeof arg === 'object' && 'id' in arg && arg.id !== '') {\n          return [{ type: 'ReviewWorkflow' as const, id: arg.id }];\n        } else {\n          return [\n            ...(res?.workflows.map(({ id }) => ({ type: 'ReviewWorkflow' as const, id })) ?? []),\n            { type: 'ReviewWorkflow' as const, id: 'LIST' },\n          ];\n        }\n      },\n    }),\n    createWorkflow: builder.mutation<\n      ReviewWorkflows.Create.Response['data'],\n      ReviewWorkflows.Create.Request['body']\n    >({\n      query: (data) => ({\n        url: '/admin/review-workflows/workflows',\n        method: 'POST',\n        data,\n      }),\n      transformResponse: (res: ReviewWorkflows.Create.Response) => res.data,\n      invalidatesTags: [{ type: 'ReviewWorkflow' as const, id: 'LIST' }],\n    }),\n    updateWorkflow: builder.mutation<\n      ReviewWorkflows.Update.Response['data'],\n      ReviewWorkflows.Update.Request['body'] & ReviewWorkflows.Update.Params\n    >({\n      query: ({ id, ...data }) => ({\n        url: `/admin/review-workflows/workflows/${id}`,\n        method: 'PUT',\n        data,\n      }),\n      transformResponse: (res: ReviewWorkflows.Update.Response) => res.data,\n      invalidatesTags: (res, _err, arg) => [{ type: 'ReviewWorkflow' as const, id: arg.id }],\n    }),\n    deleteWorkflow: builder.mutation<\n      ReviewWorkflows.Delete.Response['data'],\n      ReviewWorkflows.Delete.Params\n    >({\n      query: ({ id }) => ({\n        url: `/admin/review-workflows/workflows/${id}`,\n        method: 'DELETE',\n      }),\n      transformResponse: (res: ReviewWorkflows.Delete.Response) => res.data,\n      invalidatesTags: (res, _err, arg) => [{ type: 'ReviewWorkflow' as const, id: arg.id }],\n    }),\n    getStages: builder.query<\n      {\n        stages: NonNullable<Contracts.ReviewWorkflows.GetStages.Response['data']>;\n        meta: NonNullable<Contracts.ReviewWorkflows.GetStages.Response['meta']>;\n      },\n      Contracts.ReviewWorkflows.GetStages.Params & { slug: string }\n    >({\n      query: ({ model, slug, id }) => ({\n        url: `/admin/content-manager/${slug}/${model}/${id}/stages`,\n        method: 'GET',\n      }),\n      transformResponse: (res: Contracts.ReviewWorkflows.GetStages.Response) => {\n        return {\n          meta: res.meta ?? { workflowCount: 0 },\n          stages: res.data ?? [],\n        };\n      },\n      providesTags: (_res, _err, arg) => {\n        return [{ type: 'ReviewWorkflowStage' as const, id: arg.id }];\n      },\n    }),\n    updateStage: builder.mutation<\n      Contracts.ReviewWorkflows.UpdateStage.Response['data'],\n      Contracts.ReviewWorkflows.UpdateStage.Request['body'] &\n        Contracts.ReviewWorkflows.UpdateStage.Params & { slug: string }\n    >({\n      query: ({ model, slug, id, ...data }) => ({\n        url: `/admin/content-manager/${slug}/${model}/${id}/stage`,\n        method: 'PUT',\n        data,\n      }),\n      transformResponse: (res: Contracts.ReviewWorkflows.UpdateStage.Response) => res.data,\n      invalidatesTags: (res, _err, arg) => [{ type: 'ReviewWorkflowStage' as const, id: arg.id }],\n    }),\n    updateAssignee: builder.mutation<\n      Contracts.ReviewWorkflows.UpdateAssignee.Response['data'],\n      Contracts.ReviewWorkflows.UpdateAssignee.Request['body'] &\n        Contracts.ReviewWorkflows.UpdateAssignee.Params & { slug: string }\n    >({\n      query: ({ model, slug, id, ...data }) => ({\n        url: `/admin/content-manager/${slug}/${model}/${id}/assignee`,\n        method: 'PUT',\n        data,\n      }),\n      transformResponse: (res: Contracts.ReviewWorkflows.UpdateAssignee.Response) => res.data,\n    }),\n  }),\n  overrideExisting: false,\n});\n\ntype GetWorkflowsParams =\n  | ReviewWorkflows.Get.Params\n  | (ReviewWorkflows.GetAll.Request['query'] & { id?: never });\n\nconst {\n  useGetWorkflowsQuery,\n  useCreateWorkflowMutation,\n  useDeleteWorkflowMutation,\n  useUpdateWorkflowMutation,\n  useGetStagesQuery,\n  useUpdateStageMutation,\n  useUpdateAssigneeMutation,\n} = reviewWorkflowsApi;\n\nexport {\n  useGetWorkflowsQuery,\n  useCreateWorkflowMutation,\n  useDeleteWorkflowMutation,\n  useUpdateWorkflowMutation,\n  useGetStagesQuery,\n  useUpdateStageMutation,\n  useUpdateAssigneeMutation,\n  type GetWorkflowsParams,\n};\n"],"names":[],"mappings":"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"}