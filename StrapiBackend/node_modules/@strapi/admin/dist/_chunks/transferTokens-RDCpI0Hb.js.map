{"version":3,"file":"transferTokens-RDCpI0Hb.js","sources":["../../admin/src/services/transferTokens.ts"],"sourcesContent":["import * as TransferTokens from '../../../shared/contracts/transfer';\n\nimport { adminApi } from './api';\n\nconst transferTokenService = adminApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getTransferTokens: builder.query<TransferTokens.TokenList.Response['data'], void>({\n      query: () => ({\n        url: '/admin/transfer/tokens',\n        method: 'GET',\n      }),\n      transformResponse: (response: TransferTokens.TokenList.Response) => response.data,\n      providesTags: (res, _err) => [\n        ...(res?.map(({ id }) => ({ type: 'TransferToken' as const, id })) ?? []),\n        { type: 'TransferToken' as const, id: 'LIST' },\n      ],\n    }),\n    getTransferToken: builder.query<\n      TransferTokens.TokenGetById.Response['data'],\n      TransferTokens.TokenGetById.Params['id']\n    >({\n      query: (id) => `/admin/transfer/tokens/${id}`,\n      transformResponse: (response: TransferTokens.TokenGetById.Response) => response.data,\n      providesTags: (res, _err, id) => [{ type: 'TransferToken' as const, id }],\n    }),\n    createTransferToken: builder.mutation<\n      TransferTokens.TokenCreate.Response['data'],\n      TransferTokens.TokenCreate.Request['body']\n    >({\n      query: (body) => ({\n        url: '/admin/transfer/tokens',\n        method: 'POST',\n        data: body,\n      }),\n      transformResponse: (response: TransferTokens.TokenCreate.Response) => response.data,\n      invalidatesTags: [{ type: 'TransferToken' as const, id: 'LIST' }],\n    }),\n    deleteTransferToken: builder.mutation<\n      TransferTokens.TokenRevoke.Response['data'],\n      TransferTokens.TokenRevoke.Params['id']\n    >({\n      query: (id) => ({\n        url: `/admin/transfer/tokens/${id}`,\n        method: 'DELETE',\n      }),\n      transformResponse: (response: TransferTokens.TokenRevoke.Response) => response.data,\n      invalidatesTags: (_res, _err, id) => [{ type: 'TransferToken' as const, id }],\n    }),\n    updateTransferToken: builder.mutation<\n      TransferTokens.TokenUpdate.Response['data'],\n      TransferTokens.TokenUpdate.Params & TransferTokens.TokenUpdate.Request['body']\n    >({\n      query: ({ id, ...body }) => ({\n        url: `/admin/transfer/tokens/${id}`,\n        method: 'PUT',\n        data: body,\n      }),\n      transformResponse: (response: TransferTokens.TokenUpdate.Response) => response.data,\n      invalidatesTags: (_res, _err, { id }) => [{ type: 'TransferToken' as const, id }],\n    }),\n  }),\n  overrideExisting: false,\n});\n\nconst {\n  useGetTransferTokensQuery,\n  useGetTransferTokenQuery,\n  useCreateTransferTokenMutation,\n  useDeleteTransferTokenMutation,\n  useUpdateTransferTokenMutation,\n} = transferTokenService;\n\nexport {\n  useGetTransferTokensQuery,\n  useGetTransferTokenQuery,\n  useCreateTransferTokenMutation,\n  useDeleteTransferTokenMutation,\n  useUpdateTransferTokenMutation,\n};\n"],"names":["adminApi"],"mappings":";;AAIA,MAAM,uBAAuBA,eAAS,gBAAgB;AAAA,EACpD,WAAW,CAAC,aAAa;AAAA,IACvB,mBAAmB,QAAQ,MAAuD;AAAA,MAChF,OAAO,OAAO;AAAA,QACZ,KAAK;AAAA,QACL,QAAQ;AAAA,MAAA;AAAA,MAEV,mBAAmB,CAAC,aAAgD,SAAS;AAAA,MAC7E,cAAc,CAAC,KAAK,SAAS;AAAA,QAC3B,GAAI,KAAK,IAAI,CAAC,EAAE,GAAU,OAAA,EAAE,MAAM,iBAA0B,KAAK,KAAK,CAAC;AAAA,QACvE,EAAE,MAAM,iBAA0B,IAAI,OAAO;AAAA,MAC/C;AAAA,IAAA,CACD;AAAA,IACD,kBAAkB,QAAQ,MAGxB;AAAA,MACA,OAAO,CAAC,OAAO,0BAA0B,EAAE;AAAA,MAC3C,mBAAmB,CAAC,aAAmD,SAAS;AAAA,MAChF,cAAc,CAAC,KAAK,MAAM,OAAO,CAAC,EAAE,MAAM,iBAA0B,IAAI;AAAA,IAAA,CACzE;AAAA,IACD,qBAAqB,QAAQ,SAG3B;AAAA,MACA,OAAO,CAAC,UAAU;AAAA,QAChB,KAAK;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,MAAA;AAAA,MAER,mBAAmB,CAAC,aAAkD,SAAS;AAAA,MAC/E,iBAAiB,CAAC,EAAE,MAAM,iBAA0B,IAAI,QAAQ;AAAA,IAAA,CACjE;AAAA,IACD,qBAAqB,QAAQ,SAG3B;AAAA,MACA,OAAO,CAAC,QAAQ;AAAA,QACd,KAAK,0BAA0B,EAAE;AAAA,QACjC,QAAQ;AAAA,MAAA;AAAA,MAEV,mBAAmB,CAAC,aAAkD,SAAS;AAAA,MAC/E,iBAAiB,CAAC,MAAM,MAAM,OAAO,CAAC,EAAE,MAAM,iBAA0B,IAAI;AAAA,IAAA,CAC7E;AAAA,IACD,qBAAqB,QAAQ,SAG3B;AAAA,MACA,OAAO,CAAC,EAAE,IAAI,GAAG,YAAY;AAAA,QAC3B,KAAK,0BAA0B,EAAE;AAAA,QACjC,QAAQ;AAAA,QACR,MAAM;AAAA,MAAA;AAAA,MAER,mBAAmB,CAAC,aAAkD,SAAS;AAAA,MAC/E,iBAAiB,CAAC,MAAM,MAAM,EAAE,SAAS,CAAC,EAAE,MAAM,iBAA0B,IAAI;AAAA,IAAA,CACjF;AAAA,EAAA;AAAA,EAEH,kBAAkB;AACpB,CAAC;AAEK,MAAA;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI;;;;;;"}