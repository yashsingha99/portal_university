import * as AuditLogs from '../../../../shared/contracts/audit-logs';
declare const useGetAuditLogsQuery: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseQuery<import("@reduxjs/toolkit/query").QueryDefinition<{}, import("@reduxjs/toolkit/query").BaseQueryFn<string | import("../../../../admin/src/utils/baseQuery").QueryArguments, unknown, import("../../../../admin/src/utils/baseQuery").BaseQueryError>, "ApiToken" | "LicenseLimits" | "Me" | "ProjectSettings" | "ProvidersOptions" | "ReviewWorkflow" | "ReviewWorkflowStage" | "Role" | "RolePermissions" | "TransferToken" | "User" | "Webhook", AuditLogs.GetAll.Response, "adminApi">>, useGetAuditLogQuery: import("@reduxjs/toolkit/dist/query/react/buildHooks").UseQuery<import("@reduxjs/toolkit/query").QueryDefinition<import("@strapi/types/dist/types/core/entity").ID, import("@reduxjs/toolkit/query").BaseQueryFn<string | import("../../../../admin/src/utils/baseQuery").QueryArguments, unknown, import("../../../../admin/src/utils/baseQuery").BaseQueryError>, "ApiToken" | "LicenseLimits" | "Me" | "ProjectSettings" | "ProvidersOptions" | "ReviewWorkflow" | "ReviewWorkflowStage" | "Role" | "RolePermissions" | "TransferToken" | "User" | "Webhook", AuditLogs.Get.Response, "adminApi">>;
export { useGetAuditLogsQuery, useGetAuditLogQuery };
