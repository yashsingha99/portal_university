{"version":3,"file":"load-config-file.mjs","sources":["../../../src/core/app-configuration/load-config-file.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport { templateConfiguration, env, importDefault } from '@strapi/utils';\n\nconst loadJsFile = (file: string) => {\n  try {\n    const jsModule = importDefault(file);\n\n    // call if function\n    if (typeof jsModule === 'function') {\n      return jsModule({ env });\n    }\n\n    return jsModule;\n  } catch (error) {\n    if (error instanceof Error) {\n      throw new Error(`Could not load js config file ${file}: ${error.message}`);\n    }\n\n    throw new Error('Unknown error');\n  }\n};\n\nconst loadJSONFile = (file: string) => {\n  try {\n    return templateConfiguration(JSON.parse(fs.readFileSync(file).toString()));\n  } catch (error) {\n    if (error instanceof Error) {\n      throw new Error(`Could not load json config file ${file}: ${error.message}`);\n    }\n\n    throw new Error('Unknown error');\n  }\n};\n\nexport const loadFile = (file: string) => {\n  const ext = path.extname(file);\n\n  switch (ext) {\n    case '.js':\n      return loadJsFile(file);\n    case '.json':\n      return loadJSONFile(file);\n    default:\n      return {};\n  }\n};\n"],"names":[],"mappings":";;;AAIA,MAAM,aAAa,CAAC,SAAiB;AAC/B,MAAA;AACI,UAAA,WAAW,cAAc,IAAI;AAG/B,QAAA,OAAO,aAAa,YAAY;AAC3B,aAAA,SAAS,EAAE,IAAA,CAAK;AAAA,IACzB;AAEO,WAAA;AAAA,WACA,OAAO;AACd,QAAI,iBAAiB,OAAO;AAC1B,YAAM,IAAI,MAAM,iCAAiC,IAAI,KAAK,MAAM,OAAO,EAAE;AAAA,IAC3E;AAEM,UAAA,IAAI,MAAM,eAAe;AAAA,EACjC;AACF;AAEA,MAAM,eAAe,CAAC,SAAiB;AACjC,MAAA;AACK,WAAA,sBAAsB,KAAK,MAAM,GAAG,aAAa,IAAI,EAAE,SAAU,CAAA,CAAC;AAAA,WAClE,OAAO;AACd,QAAI,iBAAiB,OAAO;AAC1B,YAAM,IAAI,MAAM,mCAAmC,IAAI,KAAK,MAAM,OAAO,EAAE;AAAA,IAC7E;AAEM,UAAA,IAAI,MAAM,eAAe;AAAA,EACjC;AACF;AAEa,MAAA,WAAW,CAAC,SAAiB;AAClC,QAAA,MAAM,KAAK,QAAQ,IAAI;AAE7B,UAAQ,KAAK;AAAA,IACX,KAAK;AACH,aAAO,WAAW,IAAI;AAAA,IACxB,KAAK;AACH,aAAO,aAAa,IAAI;AAAA,IAC1B;AACE,aAAO;EACX;AACF;"}