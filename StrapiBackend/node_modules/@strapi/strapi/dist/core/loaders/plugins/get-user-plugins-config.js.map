{"version":3,"file":"get-user-plugins-config.js","sources":["../../../../src/core/loaders/plugins/get-user-plugins-config.ts"],"sourcesContent":["import { join } from 'path';\nimport fse from 'fs-extra';\nimport { merge } from 'lodash/fp';\nimport { loadFile } from '../../app-configuration/load-config-file';\n\n/**\n * Return user defined plugins' config\n * first load config from `config/plugins.js`\n * and then merge config from `config/env/{env}/plugins.js`\n */\nexport const getUserPluginsConfig = async () => {\n  const globalUserConfigPath = join(strapi.dirs.dist.config, 'plugins.js');\n  const currentEnvUserConfigPath = join(\n    strapi.dirs.dist.config,\n    'env',\n    process.env.NODE_ENV as string,\n    'plugins.js'\n  );\n  let config = {};\n\n  // assign global user config if exists\n  if (await fse.pathExists(globalUserConfigPath)) {\n    config = loadFile(globalUserConfigPath);\n  }\n\n  // and merge user config by environment if exists\n  if (await fse.pathExists(currentEnvUserConfigPath)) {\n    config = merge(config, loadFile(currentEnvUserConfigPath));\n  }\n\n  return config;\n};\n"],"names":["join","fse","loadFile","merge"],"mappings":";;;;;;;;AAUO,MAAM,uBAAuB,YAAY;AAC9C,QAAM,uBAAuBA,KAAAA,KAAK,OAAO,KAAK,KAAK,QAAQ,YAAY;AACvE,QAAM,2BAA2BA,KAAA;AAAA,IAC/B,OAAO,KAAK,KAAK;AAAA,IACjB;AAAA,IACA,QAAQ,IAAI;AAAA,IACZ;AAAA,EAAA;AAEF,MAAI,SAAS,CAAA;AAGb,MAAI,MAAMC,aAAA,QAAI,WAAW,oBAAoB,GAAG;AAC9C,aAASC,eAAAA,SAAS,oBAAoB;AAAA,EACxC;AAGA,MAAI,MAAMD,aAAA,QAAI,WAAW,wBAAwB,GAAG;AAClD,aAASE,EAAAA,MAAM,QAAQD,eAAAA,SAAS,wBAAwB,CAAC;AAAA,EAC3D;AAEO,SAAA;AACT;;"}