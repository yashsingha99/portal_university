{"version":3,"file":"action.js","sources":["../../../../../src/commands/actions/templates/generate/action.ts"],"sourcesContent":["import { resolve, join, basename } from 'path';\nimport fse from 'fs-extra';\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\n\n// All directories that a template could need\nconst TEMPLATE_CONTENT = ['src', 'data'];\n\nasync function copyContent(templatePath: string, rootBase: string) {\n  for (const item of TEMPLATE_CONTENT) {\n    try {\n      const pathToCopy = join(process.cwd(), item);\n\n      if (!(await fse.pathExists(pathToCopy))) {\n        continue;\n      }\n\n      await fse.copy(pathToCopy, join(templatePath, item));\n      const currentProjectBase = basename(process.cwd());\n      console.log(\n        `${chalk.green(\n          'success'\n        )}: copy ${currentProjectBase}/${item} => ${rootBase}/template/${item}`\n      );\n    } catch (error) {\n      if (error instanceof Error) {\n        console.error(`${chalk.red('error')}: ${error.message}`);\n      }\n    }\n  }\n}\n\n/**\n *\n * @param {string} rootPath Absolute path to the root directory\n */\nasync function writeTemplateJson(rootPath: string) {\n  try {\n    await fse.writeJSON(join(rootPath, 'template.json'), {});\n    console.log(`${chalk.green('success')}: create JSON config file`);\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error(`${chalk.red('error')}: ${error.message}`);\n    }\n  }\n}\n\n/**\n *\n * @param {string} rootPath Absolute path to the root directory\n * @returns boolean\n */\nasync function templateConfigExists(rootPath: string) {\n  const configExists = await fse.pathExists(join(rootPath, 'template.json'));\n  console.log(`checking: ${join(rootPath, 'template.json')}. result ${configExists}`);\n  return configExists;\n}\n\nexport default async function generateTemplate(directory: string) {\n  const rootPath = resolve(directory);\n\n  // Get path to template directory: <rootPath>/template\n  const templatePath = join(rootPath, 'template');\n\n  // Check if the template directory exists\n  const exists = await fse.pathExists(templatePath);\n  const rootBase = basename(rootPath);\n\n  if (exists) {\n    // Confirm the user wants to replace the existing template\n    const inquiry = await inquirer.prompt({\n      type: 'confirm',\n      name: 'confirm',\n      message: `${chalk.yellow(rootBase)} already exists.  Do you want to replace it?`,\n    });\n\n    if (!inquiry.confirm) {\n      process.exit(0);\n    }\n  }\n\n  // Create or replace root directory with <roothPath>/template\n  await fse.ensureDir(templatePath);\n  // Copy content to /template\n  await copyContent(templatePath, rootBase);\n  // Create config file if it doesn't exist\n  const configExists = await templateConfigExists(rootPath);\n  if (!configExists) {\n    await writeTemplateJson(rootPath);\n  }\n\n  console.log(`${chalk.green('success')}: generated template at ${chalk.yellow(rootPath)}`);\n}\n"],"names":["join","fse","basename","chalk","resolve","inquirer"],"mappings":";;;;;;;;;AAMA,MAAM,mBAAmB,CAAC,OAAO,MAAM;AAEvC,eAAe,YAAY,cAAsB,UAAkB;AACjE,aAAW,QAAQ,kBAAkB;AAC/B,QAAA;AACF,YAAM,aAAaA,KAAAA,KAAK,QAAQ,OAAO,IAAI;AAE3C,UAAI,CAAE,MAAMC,aAAAA,QAAI,WAAW,UAAU,GAAI;AACvC;AAAA,MACF;AAEA,YAAMA,aAAAA,QAAI,KAAK,YAAYD,KAAK,KAAA,cAAc,IAAI,CAAC;AACnD,YAAM,qBAAqBE,KAAA,SAAS,QAAQ,IAAK,CAAA;AACzC,cAAA;AAAA,QACN,GAAGC,eAAM,QAAA;AAAA,UACP;AAAA,QAAA,CACD,UAAU,kBAAkB,IAAI,IAAI,OAAO,QAAQ,aAAa,IAAI;AAAA,MAAA;AAAA,aAEhE,OAAO;AACd,UAAI,iBAAiB,OAAO;AAClB,gBAAA,MAAM,GAAGA,eAAAA,QAAM,IAAI,OAAO,CAAC,KAAK,MAAM,OAAO,EAAE;AAAA,MACzD;AAAA,IACF;AAAA,EACF;AACF;AAMA,eAAe,kBAAkB,UAAkB;AAC7C,MAAA;AACF,UAAMF,aAAAA,QAAI,UAAUD,KAAA,KAAK,UAAU,eAAe,GAAG,CAAA,CAAE;AACvD,YAAQ,IAAI,GAAGG,eAAA,QAAM,MAAM,SAAS,CAAC,2BAA2B;AAAA,WACzD,OAAO;AACd,QAAI,iBAAiB,OAAO;AAClB,cAAA,MAAM,GAAGA,eAAAA,QAAM,IAAI,OAAO,CAAC,KAAK,MAAM,OAAO,EAAE;AAAA,IACzD;AAAA,EACF;AACF;AAOA,eAAe,qBAAqB,UAAkB;AACpD,QAAM,eAAe,MAAMF,qBAAI,WAAWD,KAAAA,KAAK,UAAU,eAAe,CAAC;AACjE,UAAA,IAAI,aAAaA,UAAK,UAAU,eAAe,CAAC,YAAY,YAAY,EAAE;AAC3E,SAAA;AACT;AAEA,eAA8B,iBAAiB,WAAmB;AAC1D,QAAA,WAAWI,aAAQ,SAAS;AAG5B,QAAA,eAAeJ,KAAAA,KAAK,UAAU,UAAU;AAG9C,QAAM,SAAS,MAAMC,aAAAA,QAAI,WAAW,YAAY;AAC1C,QAAA,WAAWC,cAAS,QAAQ;AAElC,MAAI,QAAQ;AAEJ,UAAA,UAAU,MAAMG,kBAAA,QAAS,OAAO;AAAA,MACpC,MAAM;AAAA,MACN,MAAM;AAAA,MACN,SAAS,GAAGF,eAAM,QAAA,OAAO,QAAQ,CAAC;AAAA,IAAA,CACnC;AAEG,QAAA,CAAC,QAAQ,SAAS;AACpB,cAAQ,KAAK,CAAC;AAAA,IAChB;AAAA,EACF;AAGM,QAAAF,aAAA,QAAI,UAAU,YAAY;AAE1B,QAAA,YAAY,cAAc,QAAQ;AAElC,QAAA,eAAe,MAAM,qBAAqB,QAAQ;AACxD,MAAI,CAAC,cAAc;AACjB,UAAM,kBAAkB,QAAQ;AAAA,EAClC;AAEQ,UAAA,IAAI,GAAGE,eAAA,QAAM,MAAM,SAAS,CAAC,2BAA2BA,eAAM,QAAA,OAAO,QAAQ,CAAC,EAAE;AAC1F;;"}