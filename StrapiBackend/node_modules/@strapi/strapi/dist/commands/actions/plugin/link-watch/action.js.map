{"version":3,"file":"action.js","sources":["../../../../../src/commands/actions/plugin/link-watch/action.ts"],"sourcesContent":["import boxen from 'boxen';\nimport chalk from 'chalk';\nimport concurrently from 'concurrently';\nimport fs from 'node:fs/promises';\nimport path from 'node:path';\nimport nodemon from 'nodemon';\nimport { outdent } from 'outdent';\n\nimport { notifyExperimentalCommand } from '../../../utils/helpers';\nimport { CLIContext } from '../../../types';\nimport { loadPkg, validatePkg } from '../../../utils/pkg';\n\ninterface ActionOptions {}\n\nexport default async (_opts: ActionOptions, _cmd: unknown, { cwd, logger }: CLIContext) => {\n  try {\n    /**\n     * Notify users this is an experimental command.\n     */\n    await notifyExperimentalCommand('plugin:watch:link', { force: true });\n\n    const outDir = './dist';\n    const extensions = 'ts,js,png,svg,gif,jpeg,css';\n\n    nodemon({\n      watch: [outDir],\n      ext: extensions,\n      exec: 'yalc push --changed',\n    });\n\n    const folder = path.join(cwd, outDir);\n\n    if (!(await pathExists(folder))) {\n      await fs.mkdir(folder);\n    }\n\n    const pkg = await loadPkg({ cwd, logger });\n    const pkgJson = await validatePkg({ pkg });\n\n    concurrently(['npm run watch']);\n\n    nodemon\n      .on('start', () => {\n        logger.info(\n          outdent`\n        Watching ${outDir} for changes to files with extensions: ${extensions}\n\n        To use this package in Strapi, in a separate shell run:\n        cd /path/to/strapi/project\n\n        Then run one of the commands below based on the package manager used in that project:\n\n        ## yarn\n        ${chalk.greenBright(`yarn dlx yalc add --link ${pkgJson.name} && yarn install`)}\n\n        ## npm\n        ${chalk.greenBright(\n          `npx yalc add ${pkgJson.name} && npx yalc link ${pkgJson.name} && npm install`\n        )}\n      `.trimStart()\n        );\n      })\n      .on('quit', () => {\n        process.exit();\n      })\n      .on('restart', (files) => {\n        logger.info('Found changes in files:', chalk.magentaBright(files));\n        logger.info('Pushing new yalc package...');\n      });\n  } catch (err) {\n    logger.error(\n      'There seems to be an unexpected error, try again with --debug for more information \\n'\n    );\n    if (err instanceof Error && err.stack) {\n      console.log(\n        chalk.red(\n          boxen(err.stack, {\n            padding: 1,\n            align: 'left',\n          })\n        )\n      );\n    }\n    process.exit(1);\n  }\n};\n\n/**\n * @internal\n */\nconst pathExists = async (path: string) => {\n  try {\n    await fs.access(path);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n"],"names":["notifyExperimentalCommand","nodemon","path","fs","pkg","loadPkg","validatePkg","concurrently","outdent","chalk","boxen"],"mappings":";;;;;;;;;;;;;;;;;AAcA,MAAe,SAAA,OAAO,OAAsB,MAAe,EAAE,KAAK,aAAyB;AACrF,MAAA;AAIF,UAAMA,QAA0B,0BAAA,qBAAqB,EAAE,OAAO,KAAM,CAAA;AAEpE,UAAM,SAAS;AACf,UAAM,aAAa;AAEXC,6BAAA;AAAA,MACN,OAAO,CAAC,MAAM;AAAA,MACd,KAAK;AAAA,MACL,MAAM;AAAA,IAAA,CACP;AAED,UAAM,SAASC,cAAA,QAAK,KAAK,KAAK,MAAM;AAEpC,QAAI,CAAE,MAAM,WAAW,MAAM,GAAI;AACzB,YAAAC,YAAA,QAAG,MAAM,MAAM;AAAA,IACvB;AAEA,UAAMC,QAAM,MAAMC,IAAA,QAAQ,EAAE,KAAK,OAAQ,CAAA;AACzC,UAAM,UAAU,MAAMC,IAAAA,YAAY,EAAEF,KAAAA,MAAK,CAAA;AAE5BG,kCAAA,CAAC,eAAe,CAAC;AAG3BN,6BAAA,GAAG,SAAS,MAAM;AACV,aAAA;AAAA,QACLO;mBACS,MAAM,0CAA0C,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQnEC,eAAAA,QAAM,YAAY,4BAA4B,QAAQ,IAAI,kBAAkB,CAAC;AAAA;AAAA;AAAA,UAG7EA,eAAM,QAAA;AAAA,UACN,gBAAgB,QAAQ,IAAI,qBAAqB,QAAQ,IAAI;AAAA,QAAA,CAC9D;AAAA,QACD,UAAU;AAAA,MAAA;AAAA,IACV,CACD,EACA,GAAG,QAAQ,MAAM;AAChB,cAAQ,KAAK;AAAA,IACd,CAAA,EACA,GAAG,WAAW,CAAC,UAAU;AACxB,aAAO,KAAK,2BAA2BA,eAAM,QAAA,cAAc,KAAK,CAAC;AACjE,aAAO,KAAK,6BAA6B;AAAA,IAAA,CAC1C;AAAA,WACI,KAAK;AACL,WAAA;AAAA,MACL;AAAA,IAAA;AAEE,QAAA,eAAe,SAAS,IAAI,OAAO;AAC7B,cAAA;AAAA,QACNA,eAAAA,QAAM;AAAA,UACJC,eAAA,QAAM,IAAI,OAAO;AAAA,YACf,SAAS;AAAA,YACT,OAAO;AAAA,UAAA,CACR;AAAA,QACH;AAAA,MAAA;AAAA,IAEJ;AACA,YAAQ,KAAK,CAAC;AAAA,EAChB;AACF;AAKA,MAAM,aAAa,OAAOR,UAAiB;AACrC,MAAA;AACI,UAAAC,YAAA,QAAG,OAAOD,KAAI;AACb,WAAA;AAAA,WACA,OAAO;AACP,WAAA;AAAA,EACT;AACF;;"}