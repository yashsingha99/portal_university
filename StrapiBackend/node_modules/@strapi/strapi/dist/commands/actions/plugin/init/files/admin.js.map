{"version":3,"file":"admin.js","sources":["../../../../../../src/commands/actions/plugin/init/files/admin.ts"],"sourcesContent":["import { TemplateFile } from '@strapi/pack-up';\nimport { outdent } from 'outdent';\n\nconst PLUGIN_ICON_CODE = outdent`\nimport { Puzzle } from '@strapi/icons';\n\nconst PluginIcon = () => <Puzzle />;\n\nexport { PluginIcon };\n`;\n\nconst APP_CODE = outdent`\nimport { AnErrorOccurred } from '@strapi/helper-plugin';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { PLUGIN_ID } from '../pluginId';\n\nimport { HomePage } from './HomePage';\n\nconst App = () => {\n  return (\n    <Switch>\n        <Route path={\\`/plugins/\\${PLUGIN_ID}\\`} component={HomePage} exact />\n        <Route component={AnErrorOccurred} />\n    </Switch>\n  );\n};\n\nexport { App };\n`;\n\nconst HOMEPAGE_CODE = outdent`\n    import { Main } from '@strapi/design-system';\n    import { useIntl } from 'react-intl';\n\n    import { getTranslation } from '../utils/getTranslation';\n\n    const HomePage = () => {\n        const { formatMessage } = useIntl();\n\n        return (\n            <Main>\n                <h1>Welcome to {formatMessage({ id: getTranslation(\"plugin.name\") })}</h1>\n            </Main>\n        )\n    }\n\n    export { HomePage };\n`;\n\nconst TYPESCRIPT: TemplateFile[] = [\n  {\n    name: 'admin/src/index.ts',\n    contents: outdent`\n        import { prefixPluginTranslations } from '@strapi/helper-plugin';\n        import { PLUGIN_ID } from './pluginId';\n        import { Initializer } from './components/Initializer';\n        import { PluginIcon } from './components/PluginIcon';\n        \n        export default {\n          register(app: any) {\n            app.addMenuLink({\n              to: \\`/plugins/\\${PLUGIN_ID}\\`,\n              icon: PluginIcon,\n              intlLabel: {\n                id: \\`\\${PLUGIN_ID}.plugin.name\\`,\n                defaultMessage: PLUGIN_ID,\n              },\n              Component: async () => {\n                const { App } = await import('./pages/App');\n        \n                return App;\n              },\n            });\n        \n            app.registerPlugin({\n                id: PLUGIN_ID,\n                initializer: Initializer,\n                isReady: false,\n                name: PLUGIN_ID,\n            });\n          },\n        \n          async registerTrads(app: any) {\n            const { locales } = app;\n        \n            const importedTranslations = await Promise.all(\n              (locales as string[]).map((locale) => {\n                return import(\\`./translations/\\${locale}.json\\`)\n                  .then(({ default: data }) => {\n                    return {\n                      data: prefixPluginTranslations(data, PLUGIN_ID),\n                      locale,\n                    };\n                  })\n                  .catch(() => {\n                    return {\n                      data: {},\n                      locale,\n                    };\n                  });\n              })\n            );\n        \n            return importedTranslations;\n          },\n        };\n        `,\n  },\n  {\n    name: 'admin/src/components/PluginIcon.tsx',\n    contents: PLUGIN_ICON_CODE,\n  },\n  {\n    name: 'admin/src/components/Initializer.tsx',\n    contents: outdent`\n        import { useEffect, useRef } from 'react';\n\n        import { PLUGIN_ID } from '../pluginId';\n        \n        type InitializerProps = {\n          setPlugin: (id: string) => void;\n        };\n        \n        const Initializer = ({ setPlugin }: InitializerProps) => {\n          const ref = useRef(setPlugin);\n        \n          useEffect(() => {\n            ref.current(PLUGIN_ID);\n          }, []);\n        \n          return null;\n        };\n        \n        export { Initializer };\n        `,\n  },\n  {\n    name: 'admin/src/pages/App.tsx',\n    contents: APP_CODE,\n  },\n  {\n    name: 'admin/src/pages/HomePage.tsx',\n    contents: HOMEPAGE_CODE,\n  },\n  {\n    name: 'admin/src/utils/getTranslation.ts',\n    contents: outdent`\n        import { PLUGIN_ID } from '../pluginId';\n\n        const getTranslation = (id: string) => \\`\\${PLUGIN_ID}.\\${id}\\`;\n\n        export { getTranslation };\n    `,\n  },\n  {\n    name: 'admin/src/translations/en.json',\n    contents: outdent`\n        {}\n    `,\n  },\n  {\n    /**\n     * TODO: remove this when we release design-system V2\n     */\n    name: 'admin/custom.d.ts',\n    contents: outdent`\n        declare module '@strapi/design-system/*';\n        declare module '@strapi/design-system';\n    `,\n  },\n];\n\nconst JAVASCRIPT: TemplateFile[] = [\n  {\n    name: 'admin/src/index.js',\n    contents: outdent`\n            import { prefixPluginTranslations } from '@strapi/helper-plugin';\n            import { PLUGIN_ID } from './pluginId';\n            import { Initializer } from './components/Initializer';\n            import { PluginIcon } from './components/PluginIcon';\n            \n            export default {\n              register(app) {\n                app.addMenuLink({\n                  to: \\`/plugins/\\${PluginIcon}\\`,\n                  icon: PluginIcon,\n                  intlLabel: {\n                    id: \\`\\${PLUGIN_ID}.plugin.name\\`,\n                    defaultMessage: PLUGIN_ID,\n                  },\n                  Component: async () => {\n                    const { App } = await import('./pages/App');\n            \n                    return App;\n                  },\n                });\n            \n                app.registerPlugin({\n                    id: PLUGIN_ID,\n                    initializer: Initializer,\n                    isReady: false,\n                    name: PLUGIN_ID,\n                });\n              },\n            \n              async registerTrads(app) {\n                const { locales } = app;\n            \n                const importedTranslations = await Promise.all(\n                  locales.map((locale) => {\n                    return import(\\`./translations/\\${locale}.json\\`)\n                      .then(({ default: data }) => {\n                        return {\n                          data: prefixPluginTranslations(data, PLUGIN_ID),\n                          locale,\n                        };\n                      })\n                      .catch(() => {\n                        return {\n                          data: {},\n                          locale,\n                        };\n                      });\n                  })\n                );\n            \n                return importedTranslations;\n              },\n            };\n            `,\n  },\n  {\n    name: 'admin/src/components/PluginIcon.jsx',\n    contents: PLUGIN_ICON_CODE,\n  },\n  {\n    name: 'admin/src/components/Initializer.jsx',\n    contents: outdent`\n            import { useEffect, useRef } from 'react';\n    \n            import { PLUGIN_ID } from '../pluginId';\n        \n            /**\n             * @type {import('react').FC<{ setPlugin: (id: string) => void }>}\n             */     \n            const Initializer = ({ setPlugin }) => {\n              const ref = useRef(setPlugin);\n            \n              useEffect(() => {\n                ref.current(PLUGIN_ID);\n              }, []);\n            \n              return null;\n            };\n            \n            export { Initializer };\n            `,\n  },\n  {\n    name: 'admin/src/pages/App.jsx',\n    contents: APP_CODE,\n  },\n  {\n    name: 'admin/src/pages/HomePage.jsx',\n    contents: HOMEPAGE_CODE,\n  },\n  {\n    name: 'admin/src/utils/getTranslation.js',\n    contents: outdent`\n            import { PLUGIN_ID } from '../pluginId';\n    \n            const getTranslation = (id) => \\`\\${PLUGIN_ID}.\\${id}\\`;\n    \n            export { getTranslation };\n        `,\n  },\n  {\n    name: 'admin/src/translations/en.json',\n    contents: outdent`\n            {}\n        `,\n  },\n];\n\nexport { TYPESCRIPT as adminTypescriptFiles, JAVASCRIPT as adminJavascriptFiles };\n"],"names":["outdent"],"mappings":"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"}