{"version":3,"file":"server.js","sources":["../../../../../../src/commands/actions/plugin/init/files/server.ts"],"sourcesContent":["import { TemplateFile } from '@strapi/pack-up';\nimport { outdent } from 'outdent';\n\nconst TYPESCRIPT = (pluginName: string): TemplateFile[] => [\n  {\n    name: 'server/src/index.ts',\n    contents: outdent`\n    /**\n     * Application methods\n     */\n    import bootstrap from './bootstrap';\n    import destroy from './destroy';\n    import register from './register';\n\n    /**\n     * Plugin server methods\n     */\n    import config from './config';\n    import contentTypes from './content-types';\n    import controllers from './controllers';\n    import middlewares from './middlewares';\n    import policies from './policies';\n    import routes from './routes';\n    import services from './services';\n    \n    export default {\n      bootstrap,\n      destroy,\n      register,\n      \n      config,\n      controllers,\n      contentTypes,\n      middlewares,\n      policies,\n      routes,\n      services,\n    };\n    `,\n  },\n  {\n    name: 'server/src/bootstrap.ts',\n    contents: outdent`\n    import type { Strapi } from '@strapi/strapi';\n\n    const bootstrap = ({ strapi }: { strapi: Strapi }) => {\n      // bootstrap phase\n    };\n\n    export default bootstrap;\n    `,\n  },\n  {\n    name: 'server/src/destroy.ts',\n    contents: outdent`\n    import type { Strapi } from '@strapi/strapi';\n\n    const destroy = ({ strapi }: { strapi: Strapi }) => {\n      // destroy phase\n    };\n\n    export default destroy;\n    `,\n  },\n  {\n    name: 'server/src/register.ts',\n    contents: outdent`\n    import type { Strapi } from '@strapi/strapi';\n\n    const register = ({ strapi }: { strapi: Strapi }) => {\n      // register phase\n    };\n\n    export default register;\n    `,\n  },\n  {\n    name: 'server/src/config/index.ts',\n    contents: outdent`\n      export default {\n        default: {},\n        validator() {},\n      };\n    `,\n  },\n  {\n    name: 'server/src/content-types/index.ts',\n    contents: outdent`\n    export default {};\n    `,\n  },\n  {\n    name: 'server/src/controllers/index.ts',\n    contents: outdent`\n    import controller from './controller';\n\n    export default {\n        controller,\n    };\n    `,\n  },\n  {\n    name: 'server/src/controllers/controller.ts',\n    contents: outdent`\n    import type { Strapi } from '@strapi/strapi';\n\n    const controller = ({ strapi }: { strapi: Strapi }) => ({\n      index(ctx) {\n        ctx.body = strapi\n          .plugin('${pluginName}')\n          // the name of the service file & the method.\n          .service('service')\n          .getWelcomeMessage();\n      },\n    });\n\n    export default controller\n    `,\n  },\n  {\n    name: 'server/src/middlewares/index.ts',\n    contents: outdent`\n    export default {};\n    `,\n  },\n  {\n    name: 'server/src/policies/index.ts',\n    contents: outdent`\n    export default {};\n    `,\n  },\n  {\n    name: 'server/src/routes/index.ts',\n    contents: outdent`\n    export default [\n        {\n          method: 'GET',\n          path: '/',\n          // name of the controller file & the method.\n          handler: 'controller.index',\n          config: {\n            policies: [],\n          },\n        },\n      ];\n    `,\n  },\n  {\n    name: 'server/src/services/index.ts',\n    contents: outdent`\n    import service from './service';\n\n    export default {\n        service,\n    };\n    `,\n  },\n  {\n    name: 'server/src/services/service.ts',\n    contents: outdent`\n    import type { Strapi } from '@strapi/strapi';\n\n    const service = ({ strapi }: { strapi: Strapi }) => ({\n        getWelcomeMessage() {\n            return 'Welcome to Strapi ðŸš€';\n        },\n    });\n\n    export default service\n    `,\n  },\n];\n\nconst JAVASCRIPT = (pluginName: string): TemplateFile[] => [\n  {\n    name: 'server/src/index.ts',\n    contents: outdent`\n        'use strict';\n\n        /**\n         * Application methods\n         */\n        const bootstrap = require('./bootstrap');\n        const destroy = require('./destroy');\n        const register = require('./register');\n\n        /**\n         * Plugin server methods\n         */\n        const config = require('./config');\n        const contentTypes = require('./content-types');\n        const controllers = require('./controllers');\n        const middlewares = require('./middlewares');\n        const policies = require('./policies');\n        const routes = require('./routes');\n        const services = require('./services');\n\n        module.exports = {\n            bootstrap,\n            destroy,\n            register,\n            \n            config,\n            controllers,\n            contentTypes,\n            middlewares,\n            policies,\n            routes,\n            services,\n        };\n        `,\n  },\n  {\n    name: 'server/src/bootstrap.ts',\n    contents: outdent`\n        'use strict';\n\n        const bootstrap = ({ strapi }) => {\n          // bootstrap phase\n        };\n\n        module.exports = bootstrap;\n        `,\n  },\n  {\n    name: 'server/src/destroy.ts',\n    contents: outdent`\n        'use strict';\n\n        const destroy = ({ strapi }) => {\n          // destroy phase\n        };\n    \n        module.exports = destroy;\n        `,\n  },\n  {\n    name: 'server/src/register.ts',\n    contents: outdent`\n        'use strict';\n\n        const register = ({ strapi }) => {\n          // register phase\n        };\n    \n        module.exports = register;\n        `,\n  },\n  {\n    name: 'server/src/config/index.ts',\n    contents: outdent`\n      'use strict';\n\n      module.exports = {\n        default: {},\n        validator() {},\n      };\n    `,\n  },\n  {\n    name: 'server/src/content-types/index.ts',\n    contents: outdent`\n    'use strict';\n\n    module.exports = {};\n    `,\n  },\n  {\n    name: 'server/src/controllers/index.ts',\n    contents: outdent`\n    'use strict';\n\n    const controller = require('./controller');\n\n    module.exports = {\n        controller,\n    };\n    `,\n  },\n  {\n    name: 'server/src/controllers/controller.ts',\n    contents: outdent`\n    'use strict';\n\n    const controller = ({ strapi }) => ({\n      index(ctx) {\n        ctx.body = strapi\n          .plugin('${pluginName}')\n          // the name of the service file & the method.\n          .service('service')\n          .getWelcomeMessage();\n      },\n    });\n\n    module.exports = controller\n    `,\n  },\n  {\n    name: 'server/src/middlewares/index.ts',\n    contents: outdent`\n    'use strict';\n\n    module.exports = {};\n    `,\n  },\n  {\n    name: 'server/src/policies/index.ts',\n    contents: outdent`\n    'use strict';\n\n    module.exports = {};\n    `,\n  },\n  {\n    name: 'server/src/routes/index.ts',\n    contents: outdent`\n    'use strict';\n\n    module.exports = [\n        {\n          method: 'GET',\n          path: '/',\n          // name of the controller file & the method.\n          handler: 'controller.index',\n          config: {\n            policies: [],\n          },\n        },\n      ];\n    `,\n  },\n  {\n    name: 'server/src/services/index.ts',\n    contents: outdent`\n    'use strict';\n\n    const service = require('./service');\n\n    module.exports = {\n        service,\n    };\n    `,\n  },\n  {\n    name: 'server/src/services/service.ts',\n    contents: outdent`\n    'use strict';\n\n    const service = ({ strapi }) => ({\n        getWelcomeMessage() {\n            return 'Welcome to Strapi ðŸš€';\n        },\n    });\n\n    module.exports = service\n    `,\n  },\n];\n\nexport { TYPESCRIPT as serverTypescriptFiles, JAVASCRIPT as serverJavascriptFiles };\n"],"names":["outdent"],"mappings":"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"}