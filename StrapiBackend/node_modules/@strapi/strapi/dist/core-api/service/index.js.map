{"version":3,"file":"index.js","sources":["../../../src/core-api/service/index.ts"],"sourcesContent":["import { contentTypes as contentTypeUtils } from '@strapi/utils';\nimport type { CoreApi, Schema } from '@strapi/types';\n\nimport createSingleTypeService from './single-type';\nimport createCollectionTypeService from './collection-type';\n\nconst isSingleType = (contentType: Schema.ContentType): contentType is Schema.SingleType =>\n  contentTypeUtils.isSingleType(contentType);\n\n/**\n * Returns a core api for the provided model\n */\nfunction createService<T extends Schema.SingleType | Schema.CollectionType>(opts: {\n  contentType: T;\n}): T extends Schema.SingleType ? CoreApi.Service.SingleType : CoreApi.Service.CollectionType;\nfunction createService({\n  contentType,\n}: {\n  contentType: Schema.CollectionType | Schema.SingleType;\n}): CoreApi.Service.SingleType | CoreApi.Service.CollectionType {\n  if (isSingleType(contentType)) {\n    return createSingleTypeService({ contentType });\n  }\n\n  return createCollectionTypeService({ contentType });\n}\n\nexport { createService };\n"],"names":["contentTypeUtils","createSingleTypeService","createCollectionTypeService"],"mappings":";;;;;AAMA,MAAM,eAAe,CAAC,gBACpBA,YAAA,aAAiB,aAAa,WAAW;AAQ3C,SAAS,cAAc;AAAA,EACrB;AACF,GAEgE;AAC1D,MAAA,aAAa,WAAW,GAAG;AACtB,WAAAC,WAAwB,EAAE,YAAA,CAAa;AAAA,EAChD;AAEO,SAAAC,eAA4B,EAAE,YAAA,CAAa;AACpD;;"}