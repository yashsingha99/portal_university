{"version":3,"file":"policy.js","sources":["../../../src/services/server/policy.ts"],"sourcesContent":["import { policy as policyUtils, errors } from '@strapi/utils';\nimport { Common } from '@strapi/types';\n\nconst resolvePolicies = (route: Common.Route) => {\n  const policiesConfig = route?.config?.policies ?? [];\n  const resolvedPolicies = policyUtils.resolve(policiesConfig, route.info);\n\n  const policiesMiddleware: Common.MiddlewareHandler = async (ctx, next) => {\n    const context = policyUtils.createPolicyContext('koa', ctx);\n\n    for (const { handler, config } of resolvedPolicies) {\n      const result = await handler(context, config, { strapi });\n\n      if (![true, undefined].includes(result)) {\n        throw new errors.PolicyError();\n      }\n    }\n\n    await next();\n  };\n\n  return [policiesMiddleware];\n};\n\nexport { resolvePolicies };\n"],"names":["policyUtils","errors"],"mappings":";;;AAGM,MAAA,kBAAkB,CAAC,UAAwB;AAC/C,QAAM,iBAAiB,OAAO,QAAQ,YAAY,CAAA;AAClD,QAAM,mBAAmBA,YAAAA,OAAY,QAAQ,gBAAgB,MAAM,IAAI;AAEjE,QAAA,qBAA+C,OAAO,KAAK,SAAS;AACxE,UAAM,UAAUA,YAAA,OAAY,oBAAoB,OAAO,GAAG;AAE1D,eAAW,EAAE,SAAS,OAAO,KAAK,kBAAkB;AAClD,YAAM,SAAS,MAAM,QAAQ,SAAS,QAAQ,EAAE,QAAQ;AAExD,UAAI,CAAC,CAAC,MAAM,MAAS,EAAE,SAAS,MAAM,GAAG;AACjC,cAAA,IAAIC,YAAAA,OAAO;MACnB;AAAA,IACF;AAEA,UAAM,KAAK;AAAA,EAAA;AAGb,SAAO,CAAC,kBAAkB;AAC5B;;"}