{"version":3,"file":"api.js","sources":["../../../src/services/server/api.ts"],"sourcesContent":["import Router from '@koa/router';\nimport type { Strapi, Common } from '@strapi/types';\n\nimport { createRouteManager } from './routing';\n\ninterface Options {\n  prefix?: string;\n  type?: string;\n}\n\nconst createAPI = (strapi: Strapi, opts: Options = {}) => {\n  const { prefix, type } = opts;\n\n  const api = new Router({ prefix });\n\n  const routeManager = createRouteManager(strapi, { type });\n\n  return {\n    listRoutes() {\n      return [...api.stack];\n    },\n\n    use(fn: Router.Middleware) {\n      api.use(fn);\n      return this;\n    },\n\n    routes(routes: Common.Router | Common.Route[]) {\n      routeManager.addRoutes(routes, api);\n      return this;\n    },\n\n    mount(router: Router) {\n      router.use(api.routes(), api.allowedMethods());\n      return this;\n    },\n  };\n};\n\nexport { createAPI };\n"],"names":["Router","createRouteManager"],"mappings":";;;;;;AAUA,MAAM,YAAY,CAAC,QAAgB,OAAgB,OAAO;AAClD,QAAA,EAAE,QAAQ,KAAS,IAAA;AAEzB,QAAM,MAAM,IAAIA,gBAAAA,QAAO,EAAE,OAAQ,CAAA;AAEjC,QAAM,eAAeC,QAAA,mBAAmB,QAAQ,EAAE,KAAM,CAAA;AAEjD,SAAA;AAAA,IACL,aAAa;AACJ,aAAA,CAAC,GAAG,IAAI,KAAK;AAAA,IACtB;AAAA,IAEA,IAAI,IAAuB;AACzB,UAAI,IAAI,EAAE;AACH,aAAA;AAAA,IACT;AAAA,IAEA,OAAO,QAAwC;AAChC,mBAAA,UAAU,QAAQ,GAAG;AAC3B,aAAA;AAAA,IACT;AAAA,IAEA,MAAM,QAAgB;AACpB,aAAO,IAAI,IAAI,OAAU,GAAA,IAAI,gBAAgB;AACtC,aAAA;AAAA,IACT;AAAA,EAAA;AAEJ;;"}