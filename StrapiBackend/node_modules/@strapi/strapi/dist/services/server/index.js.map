{"version":3,"file":"index.js","sources":["../../../src/services/server/index.ts"],"sourcesContent":["import Router from '@koa/router';\nimport type { Strapi, Common, Server } from '@strapi/types';\n\nimport { createHTTPServer } from './http-server';\nimport { createRouteManager } from './routing';\nimport { createAdminAPI } from './admin-api';\nimport { createContentAPI } from './content-api';\nimport registerAllRoutes from './register-routes';\nimport registerApplicationMiddlewares from './register-middlewares';\nimport createKoaApp from './koa';\nimport requestCtx from '../request-context';\n\nconst healthCheck: Common.MiddlewareHandler = async (ctx) => {\n  ctx.set('strapi', 'You are so French!');\n  ctx.status = 204;\n};\n\nconst createServer = (strapi: Strapi): Server => {\n  const app = createKoaApp({\n    proxy: strapi.config.get('server.proxy'),\n    keys: strapi.config.get('server.app.keys'),\n  });\n\n  app.use((ctx, next) => requestCtx.run(ctx, () => next()));\n\n  const router = new Router();\n\n  const routeManager = createRouteManager(strapi);\n\n  const httpServer = createHTTPServer(strapi, app);\n\n  const apis = {\n    'content-api': createContentAPI(strapi),\n    admin: createAdminAPI(strapi),\n  };\n\n  // init health check\n  router.all('/_health', healthCheck);\n\n  const state = {\n    mounted: false,\n  };\n\n  return {\n    app,\n    router,\n    httpServer,\n\n    api(name) {\n      return apis[name];\n    },\n\n    use(...args) {\n      app.use(...args);\n      return this;\n    },\n\n    routes(routes: Common.Router | Omit<Common.Route, 'info'>[]) {\n      if (!Array.isArray(routes) && routes.type) {\n        const api = apis[routes.type];\n        if (!api) {\n          throw new Error(`API ${routes.type} not found. Possible APIs are ${Object.keys(apis)}`);\n        }\n\n        apis[routes.type].routes(routes);\n        return this;\n      }\n\n      routeManager.addRoutes(routes, router);\n      return this;\n    },\n\n    mount() {\n      state.mounted = true;\n\n      Object.values(apis).forEach((api) => api.mount(router));\n      app.use(router.routes()).use(router.allowedMethods());\n\n      return this;\n    },\n\n    initRouting() {\n      registerAllRoutes(strapi);\n\n      return this;\n    },\n\n    async initMiddlewares() {\n      await registerApplicationMiddlewares(strapi);\n\n      return this;\n    },\n\n    listRoutes() {\n      const allRoutes = [...router.stack];\n\n      return allRoutes;\n    },\n\n    listen(...args: any[]) {\n      if (!state.mounted) {\n        this.mount();\n      }\n\n      return httpServer.listen(...args);\n    },\n\n    async destroy() {\n      await httpServer.destroy();\n    },\n  };\n};\n\nexport { createServer };\n"],"names":["createKoaApp","requestCtx","Router","createRouteManager","httpServer","createHTTPServer","createContentAPI","createAdminAPI","registerAllRoutes","registerApplicationMiddlewares"],"mappings":";;;;;;;;;;;;;AAYA,MAAM,cAAwC,OAAO,QAAQ;AACvD,MAAA,IAAI,UAAU,oBAAoB;AACtC,MAAI,SAAS;AACf;AAEM,MAAA,eAAe,CAAC,WAA2B;AAC/C,QAAM,MAAMA,IAAa;AAAA,IACvB,OAAO,OAAO,OAAO,IAAI,cAAc;AAAA,IACvC,MAAM,OAAO,OAAO,IAAI,iBAAiB;AAAA,EAAA,CAC1C;AAEG,MAAA,IAAI,CAAC,KAAK,SAASC,eAAW,IAAI,KAAK,MAAM,KAAM,CAAA,CAAC;AAElD,QAAA,SAAS,IAAIC,gBAAAA;AAEb,QAAA,eAAeC,2BAAmB,MAAM;AAExC,QAAAC,eAAaC,WAAAA,iBAAiB,QAAQ,GAAG;AAE/C,QAAM,OAAO;AAAA,IACX,eAAeC,4BAAiB,MAAM;AAAA,IACtC,OAAOC,wBAAe,MAAM;AAAA,EAAA;AAIvB,SAAA,IAAI,YAAY,WAAW;AAElC,QAAM,QAAQ;AAAA,IACZ,SAAS;AAAA,EAAA;AAGJ,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IAAA,YACAH;AAAAA,IAEA,IAAI,MAAM;AACR,aAAO,KAAK,IAAI;AAAA,IAClB;AAAA,IAEA,OAAO,MAAM;AACP,UAAA,IAAI,GAAG,IAAI;AACR,aAAA;AAAA,IACT;AAAA,IAEA,OAAO,QAAsD;AAC3D,UAAI,CAAC,MAAM,QAAQ,MAAM,KAAK,OAAO,MAAM;AACnC,cAAA,MAAM,KAAK,OAAO,IAAI;AAC5B,YAAI,CAAC,KAAK;AACF,gBAAA,IAAI,MAAM,OAAO,OAAO,IAAI,iCAAiC,OAAO,KAAK,IAAI,CAAC,EAAE;AAAA,QACxF;AAEA,aAAK,OAAO,IAAI,EAAE,OAAO,MAAM;AACxB,eAAA;AAAA,MACT;AAEa,mBAAA,UAAU,QAAQ,MAAM;AAC9B,aAAA;AAAA,IACT;AAAA,IAEA,QAAQ;AACN,YAAM,UAAU;AAET,aAAA,OAAO,IAAI,EAAE,QAAQ,CAAC,QAAQ,IAAI,MAAM,MAAM,CAAC;AAClD,UAAA,IAAI,OAAO,OAAO,CAAC,EAAE,IAAI,OAAO,gBAAgB;AAE7C,aAAA;AAAA,IACT;AAAA,IAEA,cAAc;AACZI,qBAAkB,MAAM;AAEjB,aAAA;AAAA,IACT;AAAA,IAEA,MAAM,kBAAkB;AACtB,YAAMC,oBAA+B,MAAM;AAEpC,aAAA;AAAA,IACT;AAAA,IAEA,aAAa;AACX,YAAM,YAAY,CAAC,GAAG,OAAO,KAAK;AAE3B,aAAA;AAAA,IACT;AAAA,IAEA,UAAU,MAAa;AACjB,UAAA,CAAC,MAAM,SAAS;AAClB,aAAK,MAAM;AAAA,MACb;AAEO,aAAAL,aAAW,OAAO,GAAG,IAAI;AAAA,IAClC;AAAA,IAEA,MAAM,UAAU;AACd,YAAMA,aAAW;IACnB;AAAA,EAAA;AAEJ;;"}