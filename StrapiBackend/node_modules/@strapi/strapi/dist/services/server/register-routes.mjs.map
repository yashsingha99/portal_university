{"version":3,"file":"register-routes.mjs","sources":["../../../src/services/server/register-routes.ts"],"sourcesContent":["import _ from 'lodash';\nimport type { Strapi, Common } from '@strapi/types';\n\nconst createRouteScopeGenerator = (namespace: string) => (route: Common.RouteInput) => {\n  const prefix = namespace.endsWith('::') ? namespace : `${namespace}.`;\n\n  if (typeof route.handler === 'string') {\n    _.defaultsDeep(route, {\n      config: {\n        auth: {\n          scope: [`${route.handler.startsWith(prefix) ? '' : prefix}${route.handler}`],\n        },\n      },\n    });\n  }\n};\n\n/**\n * Register all routes\n */\nexport default (strapi: Strapi) => {\n  registerAdminRoutes(strapi);\n  registerAPIRoutes(strapi);\n  registerPluginRoutes(strapi);\n};\n\n/**\n * Register admin routes\n * @param {import('../../').Strapi} strapi\n */\nconst registerAdminRoutes = (strapi: Strapi) => {\n  const generateRouteScope = createRouteScopeGenerator(`admin::`);\n\n  _.forEach(strapi.admin?.routes, (router) => {\n    router.type = router.type || 'admin';\n    router.prefix = router.prefix || `/admin`;\n    router.routes.forEach((route) => {\n      generateRouteScope(route);\n      route.info = { pluginName: 'admin' };\n    });\n    strapi.server.routes(router);\n  });\n};\n\n/**\n * Register plugin routes\n * @param {import('../../').Strapi} strapi\n */\nconst registerPluginRoutes = (strapi: Strapi) => {\n  for (const pluginName of Object.keys(strapi.plugins)) {\n    const plugin = strapi.plugins[pluginName];\n\n    const generateRouteScope = createRouteScopeGenerator(`plugin::${pluginName}`);\n\n    if (Array.isArray(plugin.routes)) {\n      plugin.routes.forEach((route) => {\n        generateRouteScope(route);\n        route.info = { pluginName };\n      });\n\n      strapi.server.routes({\n        type: 'admin',\n        prefix: `/${pluginName}`,\n        routes: plugin.routes,\n      });\n    } else {\n      _.forEach(plugin.routes, (router) => {\n        router.type = router.type || 'admin';\n        router.prefix = router.prefix || `/${pluginName}`;\n        router.routes.forEach((route) => {\n          generateRouteScope(route);\n          route.info = { pluginName };\n        });\n\n        strapi.server.routes(router);\n      });\n    }\n  }\n};\n\n/**\n * Register api routes\n */\nconst registerAPIRoutes = (strapi: Strapi) => {\n  for (const apiName of Object.keys(strapi.api)) {\n    const api = strapi.api[apiName];\n\n    const generateRouteScope = createRouteScopeGenerator(`api::${apiName}`);\n\n    _.forEach(api.routes, (router) => {\n      // TODO: remove once auth setup\n      // pass meta down to compose endpoint\n      router.type = 'content-api';\n      router.routes?.forEach((route) => {\n        generateRouteScope(route);\n        route.info = { apiName };\n      });\n\n      return strapi.server.routes(router);\n    });\n  }\n};\n"],"names":[],"mappings":";AAGA,MAAM,4BAA4B,CAAC,cAAsB,CAAC,UAA6B;AACrF,QAAM,SAAS,UAAU,SAAS,IAAI,IAAI,YAAY,GAAG,SAAS;AAE9D,MAAA,OAAO,MAAM,YAAY,UAAU;AACrC,MAAE,aAAa,OAAO;AAAA,MACpB,QAAQ;AAAA,QACN,MAAM;AAAA,UACJ,OAAO,CAAC,GAAG,MAAM,QAAQ,WAAW,MAAM,IAAI,KAAK,MAAM,GAAG,MAAM,OAAO,EAAE;AAAA,QAC7E;AAAA,MACF;AAAA,IAAA,CACD;AAAA,EACH;AACF;AAKA,MAAe,oBAAA,CAAC,WAAmB;AACjC,sBAAoB,MAAM;AAC1B,oBAAkB,MAAM;AACxB,uBAAqB,MAAM;AAC7B;AAMA,MAAM,sBAAsB,CAAC,WAAmB;AACxC,QAAA,qBAAqB,0BAA0B,SAAS;AAE9D,IAAE,QAAQ,OAAO,OAAO,QAAQ,CAAC,WAAW;AACnC,WAAA,OAAO,OAAO,QAAQ;AACtB,WAAA,SAAS,OAAO,UAAU;AAC1B,WAAA,OAAO,QAAQ,CAAC,UAAU;AAC/B,yBAAmB,KAAK;AAClB,YAAA,OAAO,EAAE,YAAY,QAAQ;AAAA,IAAA,CACpC;AACM,WAAA,OAAO,OAAO,MAAM;AAAA,EAAA,CAC5B;AACH;AAMA,MAAM,uBAAuB,CAAC,WAAmB;AAC/C,aAAW,cAAc,OAAO,KAAK,OAAO,OAAO,GAAG;AAC9C,UAAA,SAAS,OAAO,QAAQ,UAAU;AAExC,UAAM,qBAAqB,0BAA0B,WAAW,UAAU,EAAE;AAE5E,QAAI,MAAM,QAAQ,OAAO,MAAM,GAAG;AACzB,aAAA,OAAO,QAAQ,CAAC,UAAU;AAC/B,2BAAmB,KAAK;AAClB,cAAA,OAAO,EAAE;MAAW,CAC3B;AAED,aAAO,OAAO,OAAO;AAAA,QACnB,MAAM;AAAA,QACN,QAAQ,IAAI,UAAU;AAAA,QACtB,QAAQ,OAAO;AAAA,MAAA,CAChB;AAAA,IAAA,OACI;AACL,QAAE,QAAQ,OAAO,QAAQ,CAAC,WAAW;AAC5B,eAAA,OAAO,OAAO,QAAQ;AAC7B,eAAO,SAAS,OAAO,UAAU,IAAI,UAAU;AACxC,eAAA,OAAO,QAAQ,CAAC,UAAU;AAC/B,6BAAmB,KAAK;AAClB,gBAAA,OAAO,EAAE;QAAW,CAC3B;AAEM,eAAA,OAAO,OAAO,MAAM;AAAA,MAAA,CAC5B;AAAA,IACH;AAAA,EACF;AACF;AAKA,MAAM,oBAAoB,CAAC,WAAmB;AAC5C,aAAW,WAAW,OAAO,KAAK,OAAO,GAAG,GAAG;AACvC,UAAA,MAAM,OAAO,IAAI,OAAO;AAE9B,UAAM,qBAAqB,0BAA0B,QAAQ,OAAO,EAAE;AAEtE,MAAE,QAAQ,IAAI,QAAQ,CAAC,WAAW;AAGhC,aAAO,OAAO;AACP,aAAA,QAAQ,QAAQ,CAAC,UAAU;AAChC,2BAAmB,KAAK;AAClB,cAAA,OAAO,EAAE;MAAQ,CACxB;AAEM,aAAA,OAAO,OAAO,OAAO,MAAM;AAAA,IAAA,CACnC;AAAA,EACH;AACF;"}