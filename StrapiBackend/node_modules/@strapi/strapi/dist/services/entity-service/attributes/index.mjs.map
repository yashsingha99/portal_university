{"version":3,"file":"index.mjs","sources":["../../../../src/services/entity-service/attributes/index.ts"],"sourcesContent":["import type { Common, Shared, EntityService } from '@strapi/types';\nimport transforms from './transforms';\n\nconst applyTransforms = <TUID extends Common.UID.ContentType>(\n  data: EntityService.Params.Data.Input<TUID>,\n  context: {\n    contentType: Shared.ContentTypes[TUID];\n  }\n) => {\n  const { contentType } = context;\n\n  const attributeNames = Object.keys(data) as Array<keyof typeof data & string>;\n\n  for (const attributeName of attributeNames) {\n    const value = data[attributeName];\n\n    const attribute = contentType.attributes[attributeName];\n\n    if (!attribute) {\n      continue;\n    }\n\n    const transform = transforms[attribute.type];\n\n    if (transform) {\n      const attributeContext = { ...context, attributeName, attribute };\n\n      data[attributeName] = transform(value, attributeContext);\n    }\n  }\n\n  return data;\n};\n\nexport { applyTransforms };\n"],"names":[],"mappings":";AAGM,MAAA,kBAAkB,CACtB,MACA,YAGG;AACG,QAAA,EAAE,YAAgB,IAAA;AAElB,QAAA,iBAAiB,OAAO,KAAK,IAAI;AAEvC,aAAW,iBAAiB,gBAAgB;AACpC,UAAA,QAAQ,KAAK,aAAa;AAE1B,UAAA,YAAY,YAAY,WAAW,aAAa;AAEtD,QAAI,CAAC,WAAW;AACd;AAAA,IACF;AAEM,UAAA,YAAY,WAAW,UAAU,IAAI;AAE3C,QAAI,WAAW;AACb,YAAM,mBAAmB,EAAE,GAAG,SAAS,eAAe,UAAU;AAEhE,WAAK,aAAa,IAAI,UAAU,OAAO,gBAAgB;AAAA,IACzD;AAAA,EACF;AAEO,SAAA;AACT;"}